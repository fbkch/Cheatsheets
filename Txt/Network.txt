[*] Generic approach:

	- nessus + udp tcp ip nmap scans (all protocols -F)
	
	- sslscan, testssl
	- nikto
	- dirbuster
	- hydra ? (ssh, web apps, ftp)
	- reco shodan
	- dns recon: dnsrecon -d xxxxxxx.com -D /usr/share/wordlists/dnsmap.txt -t std 
	- dnsrecursion: nmap -sU -p53 -sC -sV xxxxxxxxxx.com --script dns-recursion



[*] Nmap scans:

	=> scan with VM in bridge mode, or from host (masscan, zenmap)
	=> disable VPN, only enable one network interface or change route metrics 
	(ex: route ADD 10.0.0.0 MASK 255.0.0.0 10.65.90.1 METRIC 1)
	(ex: route ADD 172.16.0.0 MASK 255.240.0.0 10.65.90.1 METRIC 1)
	(ex: route ADD 192.168.0.0 MASK 255.255.0.0 10.65.90.1 METRIC 1)
	(ex for VPN interface: route ADD 0.0.0.0 MASK 0.0.0.0 0.0.0.0 METRIC 3 IF 10)

	=> divide the number of hosts in smaller groups

	- TCP: nmap -p- -n -Pn -sS 10.x.x.x -v | tee nmap-tcp.txt

	- UDP: nmap -p- -n -Pn -sU 10.x.x.x -v | tee nmap-udp.txt

	- IP protocol scan: nmap -p- -Pn -sO 10.x.x.x -v | tee nmap-ip-scan.txt


	Other option: 

	- TCP: 
		nmap -n -Pn -vv -p 0-65535 -sV --min-rate 350 --min-parallelism 5 --max-retries 5 --max-scan-delay 10 --max-rtt-timeout 400ms -iL <list_IP/hostname> -oA <proj name>

	- UDP: 
		sudo nmap -n -Pn -vv -p 0-65535 --min-rate 350 --min-parallelism 5 --max-retries 5 --max-scan-delay 10 --max-rtt-timeout 400ms -iL <list_IP/hostname> -sU -oA <proj name>

		=> scan the open ports with -sV 

	- UDP (masscan alternative):
		masscan -pU:1-65535 --rate=10000 <ipaddress>

	- IP: 
		sudo nmap -sO -p- -iL <list_IP/hostname> -Pn -v -oA <proj name>

	=> read targets from file: -iL targets.txt


	If slow use the min rate:

		- nmap -p- --min-rate 300 x.x.x.x -v
		- --max-rtt-timeout 1s --min-parallelism 100 

	Perform nmap -sV -sC for the open ports

	- Ping sweep for detection of hosts:

		- nmap -sP 192.168.0.1/24 -v | tee nmap-ping-sweep.txt




[*] LLMNR Poisoning

	- https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html


[*] NTLMv2 Cracking (with Hashcat)


[*] Bloodhound

	- https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-active-directory-with-bloodhound-on-kali-linux


[*] NTLM Relay



[*] Token Impersonation



[*] Pass the Hash



[*] PsExec & Crackmapexec

	- https://ptestmethod.readthedocs.io/en/latest/LFF-IPS-P3-Exploitation.html

	- https://ptestmethod.readthedocs.io/en/latest/cme.html

	- https://www.ivoidwarranties.tech/posts/pentesting-tuts/cme/crackmapexec/

	- Connect to share:
		-> rpcclient 10.x.x.x -U domainName/userName

	- Nmap scan up hosts:
		-> nmap -n -sn 192.168.x.x/24 -oG - | awk '/Up$/{print $2}'



[*] MS17-010



[*] GPP/cPasswords



[*] Kerberoasting

	- https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting

	- https://www.tarlogic.com/en/blog/how-to-attack-kerberos/

	- https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spn-setspn-syntax.aspx

	- https://www.youtube.com/watch?v=xH5T9-m9QXw

	- Get User SPNs:
		-> impacket-GetUserSPNs -dc-ip 10.X.X.X DomainName/Username:Password

	- Check time and synchronize with the DC:
		-> net time -S DC_IP_adress  (check)
		-> net time set -S DC_IP_adress


[*] Windows Priv Esc

	- https://book.hacktricks.xyz/windows/windows-local-privilege-escalation/seatbelt

	- Query MS-SQL server:
		-> sqlcmd.exe -E -S Username\SQLEXPRESS -Q "select @@version"


[*] SSL
	
	-> Weak ciphers suite:
	MD5
	SHA-1
	MD*
	CBC
	CBC*
	3DES

	-> run Nessus
	-> run sslscan (if vulnerable to Heartbleed there is a message)
	-> run on internet sslyze, ssllabs


[*] Wireless

	
	-> Explications:

	For WPA2 Personal: use airmong-ng as it uses a pre-shared key
	For WPA2 Entreprise: use rogue AP (hostapd-wpe), as authentication happens in background between AP and radius server for example

	[*] hostapd-wpe

		Edit the SSID:
			-> nano /etc/hostapd-wpe/hostapd-wpe.conf

		Run:
			-> hostapd-wpe /etc/hostapd-wpe/hostapd-wpe.conf

		Once a user connected to the Rogue AP:
			-> zcat /usr/share/wordlists/rockyou.txt.gz | asleap -C [challenge] -R [response] -W -



	[*] airmon-ng

		-> Start:		
		 	airmon-ng check kill
		 	airmon-ng start wlan0
			airodump-ng wlan0mon

		-> Select SSID and a channel:
			airodump-ng -c 6 --bssid 5A:A9:D2:62:E3:03 -w /root/docs/pentest/ wlan0mon

		-> De-auth a client to get the handshake (based on the channel, here 6):
			aireplay-ng --deauth 0 -a 5A:A9:D2:62:E3:03  -c 54:99:63:C0:15:BF wlan0mon -w MyNameFile	(-a router -c client)

		-> Break the handshake password with aircrack:
			aircrack-ng -w /usr/share/wordlists/rockyou.txt /root/Documents/Pentest/-01.cap 

		-> Cloaked SSID: deauth client from the SSID to see the name appearing when they reconnect


	[*] tcpdump


	[*] Wireshark:
		-> Difference Monitor vs Promiscuous
		-> Ex. filters: ip.addr == x.x.x.x
		-> Group packets : right click -> follow -> TCP/HTTP Stream
		-> Set in promiscuous mode?
		-> filter by ssid ?

		-> filter: EAP 	=>	gto get the Reponse Identity (username harvesting)


	-> Liens:
		-> https://gbhackers.com/wireless-penetration-testing-checklist-a-detailed-cheat-sheet/
		-> https://gist.github.com/dogrocker/86881d2403fee138487054da82d5dc2e
		-> google maps with Kismet	-> 	https://piratefache.ch/mapping-wifi-networks-on-google-maps/


	ARP Spoofing (post-exploitation of the wifi):


	[*] arpspoof
		   -> Ex: arpspoof -i [wlan0] -t [192.168.x.x (target)] -r [192.168.x.x (router)]

	[*] ettercap
		-> Enable the ipv4 forwarding:
			sysctl -w net.ipv4.ip_forward=1
		-> Bridge sniffing: two network interfaces
		-> Unified sniffing: sniff


	[*] responder
		-> In the case of an Active Directory

	[*] arpscan
		-> quickly get the hosts up in the network
